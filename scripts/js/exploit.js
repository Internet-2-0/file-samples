/*
 *	exploit.js - Exploit Functions
 */

/* "@(#)exploit.js v2.5a (c) AXODE 23/11/20" */

/*
 *  +----------+---------+-------+--------------------------------------+
 *  | Date     | Version | Name  | Comments				|
 *  +----------+---------+-------+--------------------------------------+
 *  | 10/09/06 | 1.0     | seb.  | Last version (SAFE 4.02).		|
 *  | 10/12/02 | 1.1     | zuber | Modify for Pole-Emploi.		|
 *  | 10/12/22 | 1.2     | zuber | Modify display of error messages.	|
 *  | 11/02/04 | 1.3     | ba    | New jobs selection management.	|
 *  | 11/05/18 | 1.4     | ba    | Add postActionPage to define the 	|
 *  |	       |	 |	 | action at the end of multiExec.	|
 *  |	       |	 |	 | Allow combo filter selection to be 	|
 *  |	       |	 |	 | an empty value.  			|
 *  |	       |	 |	 | The jobBatch is created here now. 	|
 *  | 11/06/07 | 1.5     | ba    | Modify display of action.	 	|
 *  | 11/07/08 | 1.6     | ba    | Add a machien view page + update on 	|
 *  |	       |	 |	 | the job view page. 			|
 *  | 11/07/26 | 1.7     | ba    | PE: Add report on closed file.	|
 *  | 12/05/31 | 1.8     | ba    | handle the job information page.	|
 *  |          |         |       | Move purge stats and events.		|
 *  |          |         |       | Image preview in view job.		|
 *  | 12/10/19 | 1.9     | ba    | Correction when closing in job view.	|
 *  |          |         |       | Add memio export tat.		|
 *  | 13/04/03 | 2. 0    | ba    | Add confirmation when leaving the    |
 *  |          |         |       | job view page.			|
 *  | 13/04/23 | 2.1     | ba    | Add jumpToJobPage function.		|
 *  | 13/11/01 | 2.2     | ba+gz | Add force job function.		|
 *  | 13/12/04 | 2.3     | zuber | Bigger Raphael errors pies.		|
 *  | 14/11/21 | 2.4     | zuber | Update for Edipost.			|
 *  | 15/04/02 | 2.5     | zuber | Add goodjob / splitjob for Edipost.	|
 *  | 23/11/20 | 2.5a    | zuber | Add job manual for Edipost.		|
 *  +----------+---------+-------+--------------------------------------+
 */

var msgbox = null;

var showViewJobExitConfirmation = true;
function viewJobConfirmation(){
    //Display a message before the unload (do not work on FF... for them it is a bug!)
    window.onbeforeunload=function(e){
        if(!showViewJobExitConfirmation)
	    return null;
	    
	var e = e || window.event;
 
	// For IE and Firefox
	if (e) {
	    e.returnValue = js_msg['MSG_VIEW_EXIT'];
	}
	 
	// For Safari
	return 'Any string';
    };
	
    //reactive the job if we leave the page
    window.onunload=function(e){
        if(showViewJobExitConfirmation)
	    ExplJobReturn('reactivejob');
    }
}

function ExplSetImage(show, hidde)
{
    var show  = document.getElementById(show);
    var hidde = document.getElementById(hidde);

    show.style.display  = 'block';
    hidde.style.display = 'none';
}

function ExplSelectAllCheckbox()
{
    var obj = document.getElementById('chk_all');

    var elements = document.getElementsByTagName('input');
    for(var i=0; i < elements.length; i++)
    {
	if(elements[i].type != 'checkbox')
	    continue;

	elements[i].checked = obj.checked;
    }
    ExplPrintCalc(null);
}

var prev_focus = null;
function ExplSelectFromToCheckbox(e)
{
    var check = false;
    var obj = document.activeElement;
    var chk_all = document.getElementById('chk_all');

    if(chk_all != null && chk_all.checked == true)
	chk_all.checked = false;

    if(e.currentTarget)
	var obj = e.currentTarget;
    else
	var obj = document.activeElement;

    e = e || event;
    if(e.shiftKey == 0)
    {
	prev_focus = obj.id;
	return;
    }


    var elements = document.getElementsByTagName('input');
    for(var i=0; i < elements.length; i++)
    {
	if(elements[i].type != 'checkbox')
	    continue;

	if(prev_focus != null && elements[i].id == prev_focus)
	    check = true;
	else if(elements[i].id == obj.id)
	    break;

	if(check == true)
	    elements[i].checked = true;
    }
}

function ExplPrintCalc(e)
{
    var ind = 0;
    var checked = '';

    if(document.getElementById('print_calc') == null)
	return;

    if(e != null)
	ExplSelectFromToCheckbox(e);

    var elements = document.getElementsByTagName('input');
    for(var i=0; i < elements.length; i++)
    {
	if(elements[i].type != 'checkbox' || elements[i].checked == false || elements[i].id == 'chk_all')
	    continue;

	checked += '&id['+(ind++)+']='+elements[i].value;
    }

    ax_DomQuery('Exploit/exploit.dom.php', 'load=job_checked'+checked, "document.getElementById('print_calc').value = ax_DomResponse;");
}

var exec_str = new Array();
var saveSelection = true;
function MultiExec(ind, total)
{
    // If Error print Alert
    if (ind != 0 && ax_DomResponse != 'OK')
    {
        msgbox.Destroy();
	msgbox = null;
	
	var msg = getActionLabelFromMemioCmd(exec_str[parseInt(ind-1)], false)+'<BR><BR>'+ax_DomResponse+" !";
	msgbox = new AxMsgBox({
		id: 'msgbox', owner: 'body', icon: 'ICO_ERROR', dx: 350, dy: 120,
		text: 'Axode', message: msg,
		text_ok: js_msg['MSG_OK'], hdl_ok: "msgbox.Destroy(); msgbox=null;"
	    });

	AxUnLock();

	return;
    }

    if(exec_str[ind] == null)
    {
	msgbox.Destroy();
	msgbox = null;

	saveSelection = false;

	if(postActionPage != null){
	    if(postActionPage == 'view_job'){
		SafeLoad('expl_view_job', 'j_id='+postActionId);
	    }else if(postActionPage == 'job'){
		SafeLoad('expl_job');
	    }else{
		ExplLoad();
	    }
	}else{
	    ExplLoad();
	}

	AxUnLock();
    }
    else if(exec_str[ind].indexOf('ExplGeneratePrintReport') === 0){ //check if the current string start with 
	/*pole emploi -> launch by ExplJobCloseWithReport*/
	msgbox.SetMessage(getActionLabelFromMemioCmd(exec_str[ind], true, ind, total));
	msgbox.SetProgress(parseInt(ind * 100 / total));
	eval(exec_str[ind]);
	MultiExec(parseInt(ind+1), total);
    }
    else
    {
	msgbox.SetMessage(getActionLabelFromMemioCmd(exec_str[ind], true, ind, total));
	msgbox.SetProgress(parseInt(ind * 100 / total));
	ax_DomQuery('Memio/memio.dom.php', 'action='+exec_str[ind], "MultiExec("+parseInt(ind+1)+", "+total+");");
    }
}

function getActionLabelFromMemioCmd(cmdLine, displayIndex, index, total){
    var memio_cmd = cmdLine.substring(0, cmdLine.indexOf(" ", 0));
    var memio_cmd_args = cmdLine.substring(cmdLine.indexOf(" ", 0));
    
    var actionLabel = "";
    
    switch(memio_cmd){
	case 'mergejob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_MERGEJOB'];
	    break;
	case 'getjob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_GETJOB'];
	    break;
	case 'putjob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_PUTJOB'];
	    break;
	case 'setjobsite':
	    actionLabel = js_msg['MSG_MEMIO_CMD_SETJOBSITE'];
	    break;
	case 'closejob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_CLOSEJOB'];
	    break;
	case 'reactivejob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_REACTIVEJOB'];
	    break;
	case 'archivejob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_ARCHIVEJOB'];
	    break;
	case 'deljob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_DELJOB'];
	    break;
	case 'completejob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_COMPLETEJOB'];
	    break;
	case 'haltomsljob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_HALTOMSLJOB'];
	    break;
	case 'haltomrljob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_HALTOMRLJOB'];
	    break;
	case 'repairjob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_REPAIRJOB'];
	    break;
	case 'destroyjob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_DESTROYJOB'];
	    break;
	case 'goodjob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_GOODJOB'];
	    break;
	case 'splitjob':
	    actionLabel = js_msg['MSG_MEMIO_CMD_SPLITJOB'];
	    break;
	case 'ExplGeneratePrintReport':
	    actionLabel = js_msg['MSG_MEMIO_CLOSE_JOB_REPORT'];
	    break;
	case 'tatexpjob':
	    actionLabel = js_msg['MSG_MEMIO_TAT_EXPORT'];
	    break;
	case 'forcejob':
	    actionLabel = js_msg['MSG_MEMIO_FORCE_JOB'];
	    break;
	default:
	    actionLabel = memio_cmd;
	    break;
    }
    
    if( displayIndex 
     && (index + 1)<= total
     && total != 1){
	actionLabel += " "+(index+1)+"/"+total;
    }
    
    return actionLabel;
    
}

function ExplJobAction(memio_cmd, be_checked, memio_param)
{
    var elements = document.getElementsByTagName('input');
    var param = document.getElementById('param');
    var nb_checked = 0;
    var is_checked = 0;

    // Destroy Message Box if exist
    if(msgbox != null){
        try {
	    msgbox.Destroy();
	    msgbox = null;
        }catch(err){};
    }
    
    if(be_checked == false)
    {
	exec_str[nb_checked] = memio_cmd;
	if(param != null)
	    exec_str[nb_checked] += ' '+param.value;
	if(memio_param != null)
	    exec_str[nb_checked] += ' '+memio_param;
	nb_checked++;
    }
    else
    {
	for(var i=0; i < elements.length; i++)
	{
	    if(elements[i].type != 'checkbox' || elements[i].checked == false || elements[i].id == 'chk_all')
		continue;
		
	    
	    exec_str[nb_checked] = memio_cmd+' '+elements[i].value;

	    if(param != null)
		exec_str[nb_checked] += ' '+param.value;
	    if(memio_param != null)
		exec_str[nb_checked] += ' '+memio_param;

	    nb_checked++;
        }
    }
    
    if(nb_checked == 0)
	return;

    exec_str[nb_checked] = null;

    /* Lock Screen */
    if(msgbox == null)
    {
	AxLock();
	msgbox = new AxMsgBox({ id: 'msgbox', owner: 'body', text: 'Axode', dx: 400, icon: 'ICO_WAIT', progress: 0});
    }

    // Uncheck case check_all
    obj = document.getElementById('chk_all');
    if(obj != null)
	obj.checked = false;

    MultiExec(0, nb_checked);
}


function ExplJobCloseWithReport(memio_cmd, be_checked)
{
    var memio_param = '1';
    var elements = document.getElementsByTagName('input');
    var param = document.getElementById('param');
    var nb_checked = 0;
    var is_checked = 0;
    
    var reportParam = "";

    
    // Destroy Message Box if exist
    if(msgbox != null){
        try {
	    msgbox.Destroy();
	    msgbox = null;
        }catch(err){};
    }
    
    if(be_checked == false)
    {
	exec_str[nb_checked] = memio_cmd;
	if(param != null)
	    exec_str[nb_checked] += ' '+param.value;
	if(memio_param != null)
	    exec_str[nb_checked] += ' '+memio_param;
	nb_checked++;
    }
    else
    {
	for(var i=0; i < elements.length; i++) {
	    if(elements[i].type != 'checkbox' || elements[i].checked == false || elements[i].id == 'chk_all')
		continue;
	
	    if(reportParam != ""){
		reportParam += ", ";
	    }
	    reportParam += elements[i].value;


	    exec_str[nb_checked] = memio_cmd+' '+elements[i].value;

	    if(param != null)
		exec_str[nb_checked] += ' '+param.value;
	    if(memio_param != null)
		exec_str[nb_checked] += ' '+memio_param;

	    nb_checked++;
	}
     }

    if(nb_checked == 0)
	return;

    //Add the report generation
    exec_str[nb_checked] = "ExplGeneratePrintReport ("+reportParam+")";
    nb_checked++;
    
    exec_str[nb_checked] = null;

    /* Lock Screen */
    if(msgbox == null)
    {
	AxLock();
	msgbox = new AxMsgBox({ id: 'msgbox', owner: 'body', text: 'Axode', dx: 400, icon: 'ICO_WAIT', progress: 0});
    }

    // Uncheck case check_all
    obj = document.getElementById('chk_all');
    if(obj != null)
	obj.checked = false;

    MultiExec(0, nb_checked);
}

function ExplJobMerge(memio_cmd)
{
     //Get the selected printer
    var param = document.getElementById('param');
    var machineId = "";
    if(param != null){
        machineId = param.value;
    }
    
    // Destroy Message Box if exist
    if(msgbox != null){
        try {
	    msgbox.Destroy();
	    msgbox = null;
        }catch(err){};
    }
    
    ax_DomQuery('Exploit/exploit.dom.php', 'load=getBatchNum&machineId='+machineId, "ExplLaunchJobMerge('"+memio_cmd+"', '"+machineId+"', ax_DomResponse);");
}

function ExplLaunchJobMerge( memio_cmd, machineId, AxDomResponse){  
    var batchData = JSON.decode(AxDomResponse);
    // Check for the number of selection and their support
    var multiSupport = false;
    var selectedSupport = "";
    var nb_checked = 0;
    var selectedId = new Array();
    var firstSelectedJobName = "";
    
   
    //Var used for building the destination file (using the first file)
    var dest_file = "";
    var dest_file_ext = "";
    
    var dataTable = document.getElementById('ec');
    var trElts = dataTable.getElementsByTagName('tr');	
    
    for(var i=0; i < trElts.length; i++){
	var line = trElts[i];
	
	var cells = line.getElementsByTagName('td');	
	var checkBox = null;
	var support = null;
	
	for(var j=0; j < cells.length; j++){
	    var cell = cells[j];
	    if(cell.getAttribute("name") == "selector"){
		support = cell.getAttribute("support");
	        checkBox = cell.firstChild;
	    }
	}
	
	if(checkBox != null && checkBox.checked == true){
	    if(nb_checked == 0){
		selectedSupport = support;
	    }else if(!multiSupport && support != selectedSupport){
	        multiSupport = true;
		selectedSupport = "multi";
	    }
 	    
	    selectedId[nb_checked] = checkBox.value;
	    if(nb_checked == 0){
		firstSelectedJobName = checkBox.id;
	    }
	    nb_checked++;
	}
    }
    
    if(nb_checked == 0)
	return;
    
    // Lock Screen 
    if(msgbox == null)
    {
	AxLock();
	msgbox = new AxMsgBox({ id: 'msgbox', owner: 'body', text: 'Axode', dx: 400, icon: 'ICO_WAIT', progress: 0});
    }
    
    // Get File dest 
    dest_file  =  firstSelectedJobName.substring(0, firstSelectedJobName.indexOf(".", 0));
    dest_file += '_'+nb_checked;
    if(selectedSupport != null){
        dest_file += '_'+selectedSupport;
    }
    
    //Build the batchNumber
    var batchNum = batchData['batch_num'];
    var machineName = batchData['name'];
    var nbZero = 5 - batchNum.length;
    var jobBatch  = machineName+"-";
    for( var i  = 0; i < nbZero; i++){
	jobBatch += "0";
    }
    jobBatch += batchNum;
    dest_file += '_'+jobBatch;
    
    //Add the extension
    dest_file += firstSelectedJobName.substring(firstSelectedJobName.indexOf(".", 0));

    //Build the array of command to exec
    for(var i=0; i < selectedId.length; i++)
    {
	exec_str[i] = memio_cmd+" "+selectedId[i]+" "+dest_file;
    }

    // put the job on the printer
    if (machineId != null)
	exec_str[i++] = "putjob "+dest_file+" "+machineId;

    exec_str[i] = null;

    // Uncheck case check_all
    obj = document.getElementById('chk_all');
    if(obj != null)
	obj.checked = false;

    //launch the first command
    MultiExec(0, nb_checked);
}

function ExplJobConfirm(memio_cmd, be_checked)
{
    var elements = document.getElementsByTagName('input');
    var id = document.getElementById('ef_id');
    var nb_checked = 0;

    if(be_checked)
    {
	for(var i=0; i < elements.length; i++)
	{
	    if(elements[i].type != 'checkbox' || elements[i].checked == false || elements[i].id == 'chk_all')
		continue;
	    nb_checked++;
	}

	if(nb_checked == 0)
	    return;
    }

    // Destroy Message Box if exist
    try {
	msgbox.Destroy();
	msgbox = null;
    }catch(err){};

    switch(memio_cmd)
    {
	case 'reactivejob':
	    if(nb_checked <= 1)	var msg = js_msg['ASK_RELOAD_1'];
	    else		var msg = js_msg['ASK_RELOAD'];
	    action = "ExplJobAction('"+memio_cmd+" "+id.value+"', "+be_checked+");";
	    break;
	case 'archivejob':
	    if(nb_checked <= 1)	var msg = js_msg['ASK_ARCHIVE_1'];
	    else		var msg = js_msg['ASK_ARCHIVE'];
	    action = "ExplJobAction('"+memio_cmd+" "+id.value+"', "+be_checked+");";
	    break;
	case 'deljob':
	    if(nb_checked <= 1)	var msg = js_msg['ASK_DELETE_1'];
	    else		var msg = js_msg['ASK_DELETE'];
	    action = "ExplJobAction('"+memio_cmd+" "+id.value+"', "+be_checked+");";
	    break;

	case 'repairjob':
	    if(nb_checked <= 1)	var msg = js_msg['ASK_REPAIR_1'];
	    else		var msg = js_msg['ASK_REPAIR'];
	    action = "ExplJobAction('"+memio_cmd+" "+id.name+" "+id.value+"', "+be_checked+");";
	    break;
	case 'destroyjob':
	    if(nb_checked <= 1)	var msg = js_msg['ASK_DESTROY_1'];
	    else		var msg = js_msg['ASK_DESTROY'];
	    action = "ExplJobAction('"+memio_cmd+" "+id.value+"', "+be_checked+");";
	    break;
	case 'goodjob':
	    var msg = js_msg['ASK_GOOD'];
	    action = "ExplJobAction('"+memio_cmd+" "+id.value+"', "+be_checked+");";
	    break;
	case 'completejob':
	    var msg = js_msg['ASK_COMPLETE'];
	    action = "ExplJobAction('closejob "+id.value+"', "+be_checked+", '0');";
	    break;
	case 'closejobgood':
	    var msg = js_msg['ASK_CLOSE_GOOD'];
	    memio_cmd = 'closejob '+id.value;
	    action = "ExplJobAction('closejob "+id.value+"', "+be_checked+", '5');";
	    break;
	case 'closejob':
	    var msg = js_msg['ASK_CLOSE'];
	    memio_cmd = 'closejob '+id.value;
	    action = "ExplJobAction('closejob "+id.value+"', "+be_checked+", '1');";
	    break;
	case 'closejobwithreport':
	    var msg = js_msg['ASK_CLOSE'];
	    memio_cmd = 'closejob '+id.value;
	    action = "ExplJobCloseWithReport('closejob "+id.value+"', "+be_checked+");";
	    break;
	case 'haltomsljob':
	    var msg = js_msg['ASK_STATUS'];
	    memio_cmd = memio_cmd+' '+id.value;
	    action = "ExplJobAction('"+memio_cmd+" "+id.value+"', "+be_checked+");";
	    break;
	case 'haltomrljob':
	    var msg = js_msg['ASK_REPRINT'];
	    memio_cmd = memio_cmd+' '+id.value;
	    action = "ExplJobAction('"+memio_cmd+" "+id.value+"', "+be_checked+");";
	    break;
	case 'splitjob':
	    var msg = js_msg['ASK_SPLIT'];
	    action = "ExplJobAction('"+memio_cmd+"', "+be_checked+");";
	    break;
	case 'tatexpjob':
	    var msg = js_msg['ASK_TAT_EXPORT'];
	    action = "ExplJobAction('"+memio_cmd+"', "+be_checked+");";
	    break;
	case 'forcejob':
	    var msg = js_msg['ASK_FORCE_IMPORT'];
	    memio_cmd = memio_cmd+' '+id.value;
	    action = "ExplJobAction('"+memio_cmd+"', "+be_checked+");";
	    break;
	default:
	    alert('ExplJobConfirm('+memio_cmd+') => not defined');
	    return;
    }

    msgbox = new AxMsgBox({
	id: 'msgbox', owner: 'body', text: 'Axode', icon: 'ICO_HELP', message: msg,
	dx: 320,
	text_ok: js_msg['MSG_YES'], hdl_ok: action,
	text_cancel: js_msg['MSG_NO'], hdl_cancel: "msgbox.Destroy(); msgbox=null;"
    });
    
}

function ExplJobReturn(cmd)
{
    var id   = document.getElementById('ef_id');
    setPostActionPage('job', id.value);
    var memio_cmd = cmd+' '+id.value;
    ExplJobAction(memio_cmd, false);
}

function ExplJobConfirm_0(memio_cmd, postActionPage)
{
    if(postActionPage != null){
        var id   = document.getElementById('ef_id');
        setPostActionPage(postActionPage, id.value);
    }
    ExplJobConfirm(memio_cmd, false);
}
function ExplJobConfirm_1(memio_cmd)
{
    ExplJobConfirm(memio_cmd, true);
}

var postActionPage = null;
var postActionId = null;
function setPostActionPage(page, id){
    postActionPage = page;
    postActionId = id;
}

function ExplJobUpload(memio_cmd)
{
//    var machine = document.getElementById('param');
    ExplJobAction(memio_cmd, true);
}

function ExplManual()
{
    var id = document.getElementById('ef_id');

    SafeLoad('expl_manual', 'j_id='+id.value);
}

function ExplManualReset()
{
    var key_code = document.getElementById('ef_manual_key_code');

    if (key_code != null)
    {
	key_code.value = '';
	key_code.focus();
    }
}

function ExplJobManual(id)
{
    setPostActionPage('job', id);

    ExplJobAction('jobmanual '+id, false);
}

function ExplJobShowView(id_job, retval)
{
    var page = document.getElementById('ef_page');
    var id   = document.getElementById('ef_id');

    // Destroy Message Box if exist
    try {
	msgbox.Destroy();
	msgbox = null;
    }catch(err){};
    AxUnLock();

    // If Error print Alert
    if(retval != 'OK')
    {
	msgbox = new AxMsgBox({
		id: 'msgbox', owner: 'body', icon: 'ICO_ERROR', dx: 350, dy: 120,
		text: 'Axode', message: retval,
		text_ok: js_msg['MSG_OK'], hdl_ok: "msgbox.Destroy(); msgbox=null;"
	    });
	return;
    }

    id.value = id_job;
    SafeLoad('expl_view', 'j_id='+id.value);
}

function ExplJobView()
{
    var job_id   = document.getElementById('job_id').value;
    
    nb_processed = 0;
    AxLock();

    // Destroy Message Box if exist
    try {
	msgbox.Destroy();
	msgbox = null;
    }catch(err){};
    msgbox = new AxMsgBox({ id: 'msgbox', owner: 'body', text: 'Axode', icon: 'ICO_WAIT', message: js_msg['MSG_PROCESSING']});

    ax_DomQuery('Memio/memio.dom.php', 'action=viewjob&id='+job_id, "ExplJobShowView('"+job_id+"', ax_DomResponse);");
}


function ExplUpdateMachList(id, data)
{
    var list = JSON.decode(data);
    var obj = document.getElementById(id);

    if(list == null)
    {
	alert('No data for '+id);
	return;
    }

    for(var i=obj.options.length; i != 0; i--)
	obj.remove(0);

    for(var i=0; i < list.length; i++)
	obj.options[i] = new Option(list[i]['name'], list[i]['id']);

    obj.disabled = false;
}

function ExplJobSplit(memio_cmd, be_checked)
{
    var elements = document.getElementsByTagName('input');
    var param1 = document.getElementById('fold1');
    var param2 = document.getElementById('fold2');
    var param3 = document.getElementById('fold3');
    var param4 = document.getElementById('fold4');
    var nb_checked = 0;
    var is_checked = 0;

    // Destroy Message Box if exist

    if (msgbox != null)
    {
        try {
	    msgbox.Destroy();
	    msgbox = null;
        } catch(err){};
    }
    
    if (be_checked == false)
    {
	exec_str[nb_checked] = memio_cmd;

	if (param1 != null)
	    exec_str[nb_checked] += ' '+param1.value;
	if (param2 != null)
	    exec_str[nb_checked] += ' '+param2.value;
	if (param3 != null)
	    exec_str[nb_checked] += ' '+param3.value;
	if (param4 != null)
	    exec_str[nb_checked] += ' '+param4.value;

	nb_checked++;
    }
    else
    {
	for (var i=0; i < elements.length; i++)
	{
	    if (elements[i].type != 'checkbox' || elements[i].checked == false || elements[i].id == 'chk_all')
		continue;
	    
	    exec_str[nb_checked] = memio_cmd+' '+elements[i].value;

	    if (param1 != null)
		exec_str[nb_checked] += ' '+param1.value;
	    if (param2 != null)
		exec_str[nb_checked] += ' '+param2.value;
	    if (param3 != null)
		exec_str[nb_checked] += ' '+param3.value;
	    if (param4 != null)
		exec_str[nb_checked] += ' '+param4.value;

	    nb_checked++;
        }
    }
    
    if (nb_checked != 1)
	return;

    exec_str[nb_checked] = null;

    /* Lock Screen */

    if (msgbox == null)
    {
	AxLock();
	msgbox = new AxMsgBox({ id: 'msgbox', owner: 'body', text: 'Axode', dx: 400, icon: 'ICO_WAIT', progress: 0});
    }

    // Uncheck case check_all

    obj = document.getElementById('chk_all');

    if (obj != null)
	obj.checked = false;

    MultiExec(0, nb_checked);
}


function ExplJobSplitAskFold(memio_cmd)
{
    var elements = document.getElementsByTagName('input');
    var nb_checked = 0;
    var jobname = 'toto.dat';

    for (var i=0; i < elements.length; i++)
    {
	if (elements[i].type != 'checkbox')
	    continue;

	if (elements[i].checked == false)
	    continue;

	jobname = elements[i].id;

	nb_checked++;
    }

    if (nb_checked != 1)
	return;

    // Destroy Message Box if exist
    try {
	msgbox.Destroy();
	msgbox = null;
    } catch(err){};

    // Create Message Box
    msgbox = new AxMsgBox({
	id: 'msgbox', owner: 'body', text: js_msg['MSG_SPLIT'], icon: 'ICO_HELP',
	text_ok: js_msg['MSG_OK'], hdl_ok: "ExplJobSplit('"+memio_cmd+"');",
	text_cancel: js_msg['MSG_CANCEL'], hdl_cancel: "msgbox.Destroy(); msgbox=null;",
	dx: 300, dy: 220
    });
    var job_text = new AxText({ id: 'job_text', owner: 'msgbox', lst_txt: null, x: 100, y:  20, text: 'Job :', txt_bold: 'bold' });
    var job_name = new AxText({ id: 'job_name', owner: 'msgbox', lst_txt: null, x: 135, y:  20, text: jobname, txt_bold: 'normal' });
    var text1  = new AxText({ id: 'text1', owner: 'msgbox', lst_txt: null, x:  70, y:  50, text: 'Dernier Pli Bobine 1 :' });
    var fold1  = new AxEdit({ id: 'fold1', owner: 'msgbox', lst_txt: null, x: 200, y:  50, value: '0', dx: 60 });
    var text2  = new AxText({ id: 'text2', owner: 'msgbox', lst_txt: null, x:  70, y:  80, text: 'Dernier Pli Bobine 2 :' });
    var fold2  = new AxEdit({ id: 'fold2', owner: 'msgbox', lst_txt: null, x: 200, y:  80, value: '0', dx: 60 });
    var text3  = new AxText({ id: 'text3', owner: 'msgbox', lst_txt: null, x:  70, y: 110, text: 'Dernier Pli Bobine 3 :' });
    var fold3  = new AxEdit({ id: 'fold3', owner: 'msgbox', lst_txt: null, x: 200, y: 110, value: '0', dx: 60 });
    var text4  = new AxText({ id: 'text4', owner: 'msgbox', lst_txt: null, x:  70, y: 140, text: 'Dernier Pli Bobine 4 :' });
    var fold4  = new AxEdit({ id: 'fold4', owner: 'msgbox', lst_txt: null, x: 200, y: 140, value: '0', dx: 60 });
}

function ExplJobUploadAskMach(memio_cmd)
{
    var elements = document.getElementsByTagName('input');
    var nb_checked = 0;

    for(var i=0; i < elements.length; i++)
    {
	if(elements[i].type != 'checkbox')
	    continue;

	if(elements[i].checked == false)
	    continue;

	nb_checked++;
    }

    if(nb_checked == 0)
	return;

    // Destroy Message Box if exist
    try {
	msgbox.Destroy();
	msgbox = null;
    }catch(err){};

    msgbox = new AxMsgBox({
	id: 'msgbox', owner: 'body', text: js_msg['MSG_UPLOAD'], icon: 'ICO_HELP',
	text_ok: js_msg['MSG_OK'], hdl_ok: "ExplJobAction('"+memio_cmd+"');",
	text_cancel: js_msg['MSG_CANCEL'], hdl_cancel: "msgbox.Destroy(); msgbox=null;"
    });
    var combo  = new AxCombobox({ id: 'param', owner: 'msgbox', lst_txt: null, x: 50, y: 20, text: js_msg['MSG_MACHINE'] });

    ax_DomQuery('Exploit/exploit.dom.php', 'load=mach_conn', "ExplUpdateMachList('param', ax_DomResponse);");
}

function ExplJobMergeAskMach(memio_cmd)
{
    var nb_checked = 0;
    
    // Check for the number of selection and their support
    var multiSupport = false;
    var selectedSupport = "";
    var dataTable = document.getElementById('ec');
    var trElts = dataTable.getElementsByTagName('tr');	
    
    for(var i=0; i < trElts.length; i++){
	var line = trElts[i];
	
	var cells = line.getElementsByTagName('td');	
	var checkBox = null;
	var support = null;
	
	for(var j=0; j < cells.length; j++){
	    var cell = cells[j];
	    if(cell.getAttribute("name") == "selector"){
		support = cell.getAttribute("support");
	        checkBox = cell.firstChild;
	    }
	}
	
	if(checkBox != null && checkBox.checked == true){
	    if(nb_checked == 0){
		selectedSupport = support;
	    }else if(!multiSupport && support != selectedSupport){
	        multiSupport = true;
	    }
	    nb_checked++;
	}
    }
    
    if(nb_checked == 0)
	return;

    // Destroy Message Box if exist
    if(msgbox != null){
	try {
	    msgbox.Destroy();
	    msgbox = null;
	}catch(err){};
    }

    action = "ExplJobMerge('"+memio_cmd+"');";
    
    if(multiSupport){
	msgbox = new AxMsgBox({
	    id: 'msgbox', owner: 'body', text: js_msg['MSG_CONCAT'], icon: 'ICO_HELP',
	    text_ok: js_msg['MSG_OK'], hdl_ok: action,
	    text_cancel: js_msg['MSG_CANCEL'], hdl_cancel: "msgbox.Destroy(); msgbox=null;",
	    dx: 350,
	    message: js_msg['MSG_MULTI_SUPPORT']
	});
    }else if(nb_checked > 1){
	msgbox = new AxMsgBox({
	    id: 'msgbox', owner: 'body', text: js_msg['MSG_CONCAT'], icon: 'ICO_HELP',
	    text_ok: js_msg['MSG_OK'], hdl_ok: action,
	    text_cancel: js_msg['MSG_CANCEL'], hdl_cancel: "msgbox.Destroy(); msgbox=null;"
	});
    }else{
	msgbox = new AxMsgBox({
	    id: 'msgbox', owner: 'body', text: js_msg['MSG_UPLOAD'], icon: 'ICO_HELP',
	    text_ok: js_msg['MSG_OK'], hdl_ok: action,
	    text_cancel: js_msg['MSG_CANCEL'], hdl_cancel: "msgbox.Destroy(); msgbox=null;"
	});
    }
    
    if(multiSupport){
	var combo  = new AxCombobox({ id: 'param', owner: 'msgbox', lst_txt: null, x: 120, y: 45, text: js_msg['MSG_MACHINE'] });
    }else{
        var combo  = new AxCombobox({ id: 'param', owner: 'msgbox', lst_txt: null, x: 50, y: 20, text: js_msg['MSG_MACHINE'] });
    }

    /* Pole Emploi */
    var filters = '';
    var elements = document.getElementsByTagName('select');
    for(var i=0; i < elements.length; i++)
    {
	if(elements[i].id.indexOf('ef_id_') < 0)
	    continue;
	if(elements[i].value == '---' || elements[i].value == 0)
	    continue;

	filters += "&"+elements[i].id.substring(3)+"="+elements[i].value;
    }

    ax_DomQuery('Exploit/exploit.dom.php', 'load=mach_conn'+filters, "ExplUpdateMachList('param', ax_DomResponse);");
}

function ExplJobModifyAskSite(memio_cmd)
{
    var elements = document.getElementsByTagName('input');
    var nb_checked = 0;

    for(var i=0; i < elements.length; i++)
    {
	if(elements[i].type != 'checkbox' || elements[i].checked == false || elements[i].id == 'chk_all')
	    continue;

	nb_checked++;
    }

    if(nb_checked == 0)
	return;

    // Destroy Message Box if exist
    if(msgbox = null){
        try {
	    msgbox.Destroy();
	    msgbox = null;
        }catch(err){};
    }

    msgbox = new AxMsgBox({
	id: 'msgbox', owner: 'body', text: js_msg['MSG_CHANGESITE'], icon: 'ICO_HELP',
	text_ok: js_msg['MSG_OK'], hdl_ok: "ExplJobAction('"+memio_cmd+"', true);",
	text_cancel: js_msg['MSG_CANCEL'], hdl_cancel: "msgbox.Destroy(); msgbox=null;"
    });
    var combo  = new AxCombobox({ id: 'param', owner: 'msgbox', lst_txt: null, x: 50, y: 20, text: js_msg['MSG_SITE'] });

    /* Pole Emploi */
    var filters = '';
    var elements = document.getElementsByTagName('select');
    for(var i=0; i < elements.length; i++)
    {
	if(elements[i].id.indexOf('ef_id_') < 0)
	    continue;
	if(elements[i].value == '---' || elements[i].value == 0)
	    continue;

	filters += "&"+elements[i].id.substring(3)+"="+elements[i].value;
    }
    ax_DomQuery('Exploit/exploit.dom.php', 'load=site_available'+filters, "ExplUpdateList('param', ax_DomResponse);");
}

function ExplUpdateCore(id, data)
{
    ax_DomClear(id);
    ax_DomLoad(id, data);
}

function ExplUpdateList(id, data, value)
{
    var list = JSON.decode(data);
    var obj = document.getElementById(id);

    if(list == null)
    {
	alert('No data for '+id);
	return;
    }

    for(var i=obj.options.length; i != 0; i--)
	obj.remove(0);

    for(var i=0; i < list.length; i++)
	obj.options[i] = new Option(list[i]['name'], list[i]['id']);

    if(value != undefined)
    {
	obj.value = value;
    }
    else
    {
	obj.selectedIndex = 0;
    }

    obj.disabled = false;
}

function ResetFilters(){
    var filtersList = document.getElementById('ef');
    
    //Get all the inputs
    var inputList = filtersList.getElementsByTagName('input');
    for(var i=0; i < inputList.length; i++){
	if(inputList[i].className == "ax_edit"){ //test if the input elt is a edition elt
	     inputList[i].value = "";
	}
    }
    
    //Get all the select
    var selectList = filtersList.getElementsByTagName('select');
    for(var i=0; i < selectList.length; i++){
	if(selectList[i].id.indexOf('ef_') ===  0){ //test if the select id starts with 'ef_'
	     selectList[i].selectedIndex = 0;
	}
    }
    
    //Refresh the display.
    ExplLoad();
}

var ExplTimer;
var tabSelectedJob;

function ExplLoad(order, npage, m_id, u_id, j_id, e_id)
{
    var page    = document.getElementById('ef_page');
    var id      = document.getElementById('ef_id');
    var sorder  = document.getElementById('ef_sorder');
    var ssens   = document.getElementById('ef_ssens');
    var limit   = document.getElementById('ef_limit');

    var refresh = document.getElementById('refresh');

    if(m_id != undefined && m_id != '')
    {
	if(document.getElementById('ef_mach') != null)
	    document.getElementById('ef_mach').value = "'"+m_id+"'";
    }
    if(u_id != undefined && u_id != '')
    {
	if(document.getElementById('ef_user') != null)
	    document.getElementById('ef_user').value = "'"+u_id+"'";
    }
    if(j_id != undefined && j_id != '')
    {
	if(document.getElementById('ef_job') != null)
	    document.getElementById('ef_job').value = "'"+j_id+"'";
    }
    if(e_id != undefined && e_id != '')
    {
	if(document.getElementById('ef_log_id') != null)
	    document.getElementById('ef_log_id').value = "'"+e_id+"'";
    }

    if(ExplTimer != null)
	clearTimeout(ExplTimer);

    if(refresh != null && refresh.value != 0)
        ExplTimer = setTimeout('ExplLoad();', parseInt(refresh.value)*1000);
        //ExplTimer = setTimeout('ExplRefresh();', parseInt(refresh.value)*1000);
	

    /* Get filters */
    var filters = '&click=ExplLoad';

    if(order != undefined && order != '')
    {
	filters += '&'+page.value+'_order='+order;
	if(sorder != null && sorder.value == order)
	{
	    if(ssens != null && ssens.value == 'ASC')
		filters += '&'+page.value+'_sens=DESC';
	    else
		filters += '&'+page.value+'_sens=ASC';
	}
    }

    if(limit != null)
	filters += '&'+page.value+'_limit='+limit.value;
    if(npage != undefined && npage != '')
	filters += '&'+page.value+'_npage='+npage;

    var elements = document.getElementsByTagName('input');
    for(var i=0; i < elements.length; i++)
    {
	if(elements[i].id.indexOf('ef_') < 0)
	    continue;
	if(elements[i].value == '')
	    continue;

	// For ef_job & ef_mach
	if(elements[i].id.substring('ef_'.length) == page.value)
	    filters += "&name="+elements[i].value;
	else
	    filters += "&"+elements[i].id.substring('ef_'.length)+"="+elements[i].value;
    }

    /* Pole Emploi */

    // Get all value
    var elements = document.getElementsByTagName('select');
    for(var i=0; i < elements.length; i++)
    {
	if(elements[i].id.indexOf('ef_desc_') < 0)
	    continue;

	if(elements[i].selectedIndex <= 0) //value == '---')
	    continue;

	filters += "&"+elements[i].id.substring('ef_desc_'.length)+"="+elements[i].value;
    }
    // Ask new lists
    var elements = document.getElementsByTagName('select');
    for(var i=0; i < elements.length; i++)
    {
	if(elements[i].id.indexOf('ef_desc_') < 0)
	    continue;

	elements[i].disabled = true;
	var selectedValue = (elements[i].selectedIndex <= 0)?"---":elements[i].value;
	ax_DomQuery('Exploit/exploit.dom.php', 'load='+elements[i].id+filters, "ExplUpdateList('"+elements[i].id+"', ax_DomResponse, '"+selectedValue+"');");
    }
    
    /* Edipost */

    // Get all value
    var elements = document.getElementsByTagName('select');
    for(var i=0; i < elements.length; i++)
    {
	if(elements[i].id.indexOf('ef_edipost_') < 0)
	    continue;

	if(elements[i].selectedIndex <= 0) //value == '---')
	    continue;

	filters += "&"+elements[i].id.substring('ef_edipost_'.length)+"="+elements[i].value;
    }
    // Ask new lists
    var elements = document.getElementsByTagName('select');
    for(var i=0; i < elements.length; i++)
    {
	if(elements[i].id.indexOf('ef_edipost_') < 0)
	    continue;

	elements[i].disabled = true;
	var selectedValue = (elements[i].selectedIndex <= 0)?"---":elements[i].value;
	ax_DomQuery('Exploit/exploit.dom.php', 'load='+elements[i].id+filters, "ExplUpdateList('"+elements[i].id+"', ax_DomResponse, '"+selectedValue+"');");
    }
    
    //Save the selected Jobs
    tabSelectedJob = new Array();
    if(saveSelection){
	nb_checked = 0;    
	var dataTable = document.getElementById('ec');
	var inputElts = document.getElementsByTagName('input');	
		    
	for(var i=0; i < inputElts.length; i++){
	    var elt = inputElts[i];
	    if(elt.type == "checkbox" && elt.checked == true){
	        tabSelectedJob[nb_checked] = elt.id;
		nb_checked++;
	    }
	 }
    }else{
	saveSelection = true;
    }
    
    var domCallback = "ExplUpdateCore('ec', ax_DomResponse);resetTabSelectionAfterReset();";
    if(page.value == "mach_info"){
	domCallback = "updatePageWithMachineStats(ax_DomResponse)";
	filters += "&m_id="+m_id;
    }else if(page.value == "fold_info"){
	filters += "&e_id="+e_id;
    }else if(page.value == "view_job"){
	domCallback = "updatePageWithJobStats(ax_DomResponse)";
	document.getElementById('ef_id').value = j_id;
	if(j_id == null){
	    filters += "&j_id="+id.value;
	}else{
	    filters += "&j_id="+j_id;
	}
    }
    
    StatUpdateCore('ec', "<CENTER><BR><BR><img src='images/icon/big_load.gif'><BR><BR></CENTER>");
    if(page.value == "job_fold")
	ax_DomQuery('Exploit/exploit.dom.php', 'load=ec_'+page.value+'&id='+e_id+filters, domCallback);
    else
	ax_DomQuery('Exploit/exploit.dom.php', 'load=ec_'+page.value+'&id='+id.value+filters, domCallback);
}


function updatePageWithJobStats(ax_DomResponse){
    var datas = JSON.decode(ax_DomResponse);
    
    ExplUpdateCore('ec', datas.html);
    
    if(datas.data.length != 0){
        Raphael("prodPie", 360, 230).pieChart(90, 90, 80,  datas.data["prod"], false, true, true);
        Raphael("errorPie", 360, 230).pieChart(90, 90, 80,  datas.data["error"], false, true, true);
    }
    
    resetTabSelectionAfterReset();
}

function updatePageWithMachineStats(ax_DomResponse){
    var datas = JSON.decode(ax_DomResponse);
    
    ExplUpdateCore('ec', datas.html);
    
    if(datas.data.length != 0){
        Raphael("timePie", 360, 230).pieChart(90, 90, 80,  datas.data["time"], false, true, true);
        Raphael("prodPie", 360, 230).pieChart(90, 90, 80,  datas.data["prod"], false, true, true);
        Raphael("errorPie", 360, 230).pieChart(90, 90, 80,  datas.data["error"], false, true, true);
    }
    
    resetTabSelectionAfterReset();
}

function resetTabSelectionAfterReset(){
    var dataTable = document.getElementById('ec');
    var inputElts = document.getElementsByTagName('input');	
    
    var nextSelItemIndex = 0;
    
    for(var i=0; i < inputElts.length; i++){
	var elt = inputElts[i];
	for(var j=0; j < tabSelectedJob.length; j++){
	    if(elt.id == tabSelectedJob[j]){
	        elt.checked = true;
	        break;
	    }
	}
    }
    
    ExplPrintCalc(null);
}

function ExplGeneratePrintReport(){
    //The function get as many job id as needed
    var strJob = "";
    for( var i = 0; i < arguments.length; i++ ) {
	if(i != 0){
	    strJob += ",";
	}
	strJob += arguments[i];
    }
    window.open('lib/generateCloseReport.php?jobid='+strJob);
}

/*  Event functions */
function eventPurgeLoad(){
    ax_DomQuery('Exploit/exploit.dom.php', 'load=ec_purge',  "ExplUpdateCore('ec',  ax_DomResponse);");
}


function ParamPurgeEvent()
{
    var start = document.getElementById('event_first');
    var end = document.getElementById('event_last');

    if(start == null || end == null)
	return;

    start.className = 'ax_edit';
    end.className = 'ax_edit';

    if(start.value > end.value)
    {
	end.className = 'ax_edit_err';
	return;
    }

    // Destroy Message Box if exist
    try {
	msgbox.Destroy();
	msgbox = null;
    }catch(err){};
    msgbox = new AxMsgBox({ id: 'msgbox', owner: 'body', text: 'Axode', icon: 'ICO_WAIT', message: js_msg['MSG_PROCESSING']});

    ax_DomQuery("Exploit/exploit.dom.php", "action=clearevent&start="+start.value+"&end="+end.value, 'msgbox.Destroy(); msgbox=null; eventPurgeLoad();');
}

function showImageThumb(event, imagePath){
    if(!event){
	//IE
	event = window.event;
    }
    
    //Get the current mouse position
    var posx = 0;
    var posy = 0; 
    if (event.pageX || event.pageY){
	posx = event.pageX;
	posy = event.pageY;
    } else if (event.clientX || event.clientY){
	posx = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
	posy = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;
    }
    
    //Get the body of the HTML page
    var bodyElt = document.getElementById("body");
    
    //create the div for image
    var imgDiv = document.createElement('div');
    imgDiv.setAttribute('id','imgThumbPreview');
    
    //set the style (set it in the code because IE does not get it if it is set in the css file)
    imgDiv.style.left 	= (posx + 10)+'px';
    imgDiv.style.top 	= (posy + 10)+'px';
    imgDiv.style.position = "absolute";
    imgDiv.style.border = "2px solid #0171BB";
    imgDiv.style.margin = "2px";
    imgDiv.style.width 	= "253px";
    //imgDiv.style.height = "190px";
    
    //add the image
    imgDiv.innerHTML = '<img src='+imagePath+' width=253>';

    //add the div to the body
    bodyElt.appendChild(imgDiv);
}

function hideImageThumb(){
    //get the html page body
    var bodyElt = document.getElementById("body");
    
    //get the image div
    var imgDiv = document.getElementById("imgThumbPreview");
    
    // remove the image div from the body
    bodyElt.removeChild(imgDiv);
}


function jumpToJobPage(jobId){
    if(jobId != "")
	SafeLoad('expl_view_job', jobId);
    else{
	msgbox = new AxMsgBox({
		id: 'msgbox', owner: 'body', icon: 'ICO_ERROR', dx: 350, dy: 120,
		text: 'Axode', message: js_msg['MSG_STAT_NO_JOB'],
		text_ok: js_msg['MSG_OK'], hdl_ok: "msgbox.Destroy(); msgbox=null;"
	    });
    }
}
/*
 *  +-------------------------------------------------------------------+
 *  | End of file							|
 *  +-------------------------------------------------------------------+
 */
