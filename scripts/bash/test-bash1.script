#!/bin/bash

# Variables to verify match your installation
DOCKERFOLDER=/home/USER/docker
RCLONE_USER=USER

# Rclone Config file
RCLONE_CONFIG=$DOCKERFOLDER/appdata/rclone/rclone.conf
export RCLONE_CONFIG

# User account that Rclone is running as
RCLONE_USER_AGENT=$RCLONE_USER
export RCLONE_USER_AGENT

# Local Mount - Ensure this is set to your local disk only.
LOCAL=/media/data/local/media
EXCLUDES=$DOCKERFOLDER/scripts/cloudserver/upload-excludes.log
LOGFILE=$DOCKERFOLDER/logs/cloudserver/upload-media.log

# Name of your Rclone Remote, likely cloud or cloudcrypt
REMOTE=shb-crypt

# This will allow for 1 second for media analysis / intro generation. Feel free to reduce if needed.
MOVEAGE=1s

# Run only one instance of the script
# Check if there is already a running rclone sync/move/copy for the same purpose
pscheck="/usr/bin/rclone move $LOCAL"
running=$(ps -ef | grep "$pscheck" | awk '{print $2}' | wc -l);
#ps -ef | grep "/usr/bin/rclone move /media/data/local/media" | awk '{print $2}' | xargs kill -9
if [[ $running > 1 ]]
then
    echo "There are already processes with: $pscheck."
    ps -ef | grep "$pscheck"
    exit
else
    echo -e "\n\n### `date +'%Y-%m-%d %H:%M'`: No currently running processes found. Starting rclone job.\n" >> $DOCKERFOLDER/logs/cloudserver/upload-media.log
fi

# Exclude File Check
if [[ ! -f $EXCLUDES ]] ; then
    echo 'Warning: No excludes.log file found at $EXCLUDES'
    exit 1
fi

# Local Disk Check
if /bin/findmnt $LOCAL -o FSTYPE -n | grep fuse; then
        echo "Warning: $LOCAL is not a local disk!"
        exit 1
fi

# Rclone Move Command
/usr/bin/rclone move $LOCAL $REMOTE:/media --drive-stop-on-upload-limit --max-transfer=500G --cutoff-mode=soft --delete-empty-src-dirs --log-file $LOGFILE -v --exclude-from $EXCLUDES --fast-list --min-age $MOVEAGE

exit 0